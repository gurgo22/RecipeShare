@model RecipeShare.Models.Recipe

@{
    ViewData["Title"] = "Details";
  
    var proteinData = Model.Ingredients?.Select(i => new { i.Name, Protein = i.Protein }).ToList();
    string recipeUrl = Url.Action("Details", "Recipes", new { id = Model.Id });
}

<div class="toolbar-icon">
    <i class="fas fa-cog"></i>
</div>

<div class="accessibility-toolbar">
    <button id="increase-text" class="btn btn-secondary btn-sm">Increase Text Size</button>
    <button id="decrease-text" class="btn btn-secondary btn-sm">Decrease Text Size</button>
    <button id="toggle-contrast" class="btn btn-secondary btn-sm">Toggle High Contrast</button>
    <button id="toggle-cursor" class="btn btn-secondary btn-sm">Large Cursor</button>
    <button id="scroll-top" class="btn btn-secondary btn-sm">Top of Page</button>
</div>

<script>
    
    document.querySelector('.toolbar-icon').addEventListener('click', function () {
        this.classList.toggle('active');
    });
</script>

<div class="container-fluid bg-dark text-white py-5 mb-5" style="background-image: url('@Url.Content($"~/images/recipes/{Model.Name}.jpg")'); background-size: cover; background-position: center;">
    <div class="container text-center">
        <h1 class="display-4">@Model.Name</h1> 
        <p class="lead">Explore the taste of @Model.CountryOfOrigin</p>
    </div>
</div>

<div class="container">
    <div class="row">

        <div class="col-lg-8">
            <div class="card shadow-lg mb-5">
                <div class="card-body">
 
                    <h4>Ingredients</h4>
                    <table class="table table-bordered table-hover mt-4">
                        <thead class="thead-dark">
                            <tr>
                                <th>Ingredient</th>
                                <th>Quantity (g)</th>
                                <th>Protein / 100g</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ingredient in Model.Ingredients) {
                                <tr>
                                    <td>@ingredient.Name</td>
                                    <td>@ingredient.Quantity</td>
                                    <td>@ingredient.Protein</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <h4 class="mt-5">Instructions</h4>
                    <p class="mt-3">
                        @Model.Instructions
                    </p>

                    <div class="mt-5">
                        <label for="servings"><strong>Number of Servings:</strong></label>
                        <input type="number" id="servings" class="form-control d-inline-block w-auto ml-2" value="1" min="1" step="1">
                    </div>
                    <div class="mt-3">
                        <h5>Total Protein: <span id="total-protein" class="badge badge-success">@Model.TotalProtein(1)</span></h5>
                    </div>

                    <script>
                        var chartLabels = @Html.Raw(Json.Serialize(proteinData.Select(i => i.Name)));
                        var chartData = @Html.Raw(Json.Serialize(proteinData.Select(i => i.Protein)));
                    </script>

                    <div id="chartDiv">
                        <canvas id="proteinChart"> </canvas>
                        <script src="https://cdn.jsdelivr.net/npm/chart.js"> </script>
                        <script src="~/js/chart.js"> </script>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Rating Section -->
            <div class="card shadow-lg mb-4">
                <div class="card-body text-center">
                    <h4>Current Rating: <span class="badge badge-info">@Model.CalculateRating() / 10</span></h4>
                    <p>(Based on @Model.Ratings.Count ratings)</p>

                    @if ( !(bool) ViewData["HasRated"] && (User.IsInRole("Regular") || User.IsInRole("Moderator") || User.IsInRole("Admin"))) {
                        <form method="post" action="/Recipes/Details/@Model.Id">
                            <div class="mt-4">
                                <label><strong>Rate this Recipe:</strong></label>
                                <input type="range" name="Value" class="form-range" id="rating" min="1" max="10" step="1" value="5">
                                <div class="d-flex justify-content-between mt-2">
                                    <span>1 - Horrible</span>
                                    <span>5 - Edible</span>
                                    <span>10 - Delicious</span>
                                </div>
                                <div class="text-center mt-2">
                                    <strong>Your Rating: <span id="ratingValue">5</span>/10</strong>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary mt-3">Submit Rating</button>
                        </form>
                    }
                </div>
            </div>

            <div class="card shadow-lg mb-4">
                <div class="card-body">
                    <h4>Comments</h4>
                    <ul class="list-group list-group-flush">
                        @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt)) {
                            <li class="list-group-item">
                                <strong>@comment.Author</strong>
                                <span class="text-muted">(@comment.CreatedAt.ToShortDateString())</span><br />
                                @comment.Content
                            </li>
                        }
                    </ul>

                    <h5 class="mt-4">Add a Comment</h5>

                    @if ((bool)ViewData["IsLoggedIn"]) {
                        <form method="post" action="/Recipes/Details/@Model.Id">
                            <input type="hidden" name="recipeId" value="@Model.Id" />
                            <div class="form-group">
                                <textarea name="content" class="form-control" rows="3" placeholder="Write your comment here..." required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary btn-block">Send Comment</button>
                        </form>
                    }
                    else {
                        <p>Please <a href="/Account/Login">log in</a> to add a comment.</p>
                    }
                    
                </div>
            </div>

            <!-- Social Sharing Section -->
            <div class="card shadow-lg">
                <div class="card-body text-center">
                    <h5>Share this recipe:</h5>
                    <a href="https://www.facebook.com/sharer/sharer.php?u=@recipeUrl" target="_blank" class="btn btn-primary btn-block my-2">
                        <i class="fab fa-facebook-f"></i> Share on Facebook
                    </a>
                    <a href="https://twitter.com/intent/tweet?url=@recipeUrl&text=@Model.Name" target="_blank" class="btn btn-info btn-block my-2">
                        <i class="fab fa-twitter"></i> Share on Twitter
                    </a>
                    <a href="https://www.pinterest.com/pin/create/button/?url=@recipeUrl&description=@Model.Name" target="_blank" class="btn btn-danger btn-block my-2">
                        <i class="fab fa-pinterest"></i> Share on Pinterest
                    </a>
                    <a href="https://www.linkedin.com/sharing/share-offsite/?url=@recipeUrl" target="_blank" class="btn btn-primary btn-block my-2">
                        <i class="fab fa-linkedin-in"></i> Share on LinkedIn
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('servings').addEventListener('input', function () {
            const servings = parseInt(this.value, 10);
            var proteinPerServing = @Model.TotalProtein(1) * servings;
            document.getElementById('total-protein').textContent = (proteinPerServing).toFixed(0);
        });

        document.getElementById('rating').addEventListener('input', function () {
            document.getElementById('ratingValue').textContent = this.value;
        });
    </script>
    
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/chart.js"></script>
<script src="~/js/accessibility.js"></script>
<script src="~/js/details.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
